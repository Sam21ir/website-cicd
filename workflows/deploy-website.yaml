name: deploy Website

on:
  push:
    branches:
      - main
      
jobs:
  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      region: "your region"
      bucket: "your state bucket name"
      dynamodb_table: "your dynamodb lock table"

    defaults:
      run:
        working-directory: ./terraform
  
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
  
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
  
      - name: Terraform Format
        run: terraform fmt
  
      - name: Terraform Init
        run: terraform init
  
      - name: Terraform Validate
        run: terraform validate
  
      - name: Terraform Plan
        run: terraform plan
  
      - name: Terraform Apply
        run: terraform apply -auto-approve

  Sync_S3:
    name: Sync files to S3 Bucket
    needs: terraform
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@master
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete --exclude '.DS_Store'
      
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: "your bucket name"
          AWS_REGION: "your region"
          SOURCE_DIR: "./website"

# After syncing your S3 bucket (likely with the Sync_S3 job), 
# this step invalidates the cache in the CloudFront distribution 
# so that users will get the latest version of the content
  Invalidate_CloudFront:
    name: Invalidate CloudFront Distribution
    needs: Sync_S3
    runs-on: ubuntu-latest

    steps:
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2

        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/*"
          AWS_REGION: "your region"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}